{"ast":null,"code":"import _defineProperty from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/src/components/NameForm.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nvar NameForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NameForm, _React$Component);\n\n  function NameForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NameForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NameForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleInput = function (event) {\n      _this.setState(_defineProperty({}, event.target.type, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      var form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      _this.setState({\n        validated: true\n      });\n\n      console.log();\n    };\n\n    _this.state = {\n      validated: false,\n      name: '',\n      email: '',\n      username: '',\n      password: '',\n      confirmPassword: ''\n    };\n    return _this;\n  }\n\n  _createClass(NameForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var validated = this.state.validated;\n      return React.createElement(Container, {\n        className: \"mt-5 pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"validationCustomUsername\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Username\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(InputGroup.Prepend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"@\")), React.createElement(Form.Control, {\n        type: \"text\",\n        id: \"username\",\n        placeholder: \"Username\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        value: this.state.username,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Please choose a username.\")))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"validationCustom03\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Form.Control, {\n        id: \"email\",\n        type: \"email\",\n        placeholder: \"Email Address\",\n        value: this.state.email,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Please provide a valid email address.\")), React.createElement(Form.Group, {\n        as: Col,\n        md: \"3\",\n        controlId: \"validationCustom04\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        id: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Please provide a valid password.\")), React.createElement(Form.Group, {\n        as: Col,\n        md: \"3\",\n        controlId: \"validationCustom05\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Re-enter Password to Confirm\"), React.createElement(Form.Control, {\n        id: \"confirmPassword\",\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: this.state.confirmPassword,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Please make sure your password matches.\"))), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Form.Check, {\n        required: true,\n        label: \"Agree to terms and conditions\",\n        feedback: \"You must agree before submitting.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return NameForm;\n}(React.Component);\n\nexport { NameForm as default };","map":{"version":3,"sources":["/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/src/components/NameForm.js"],"names":["React","Container","Form","Button","Col","InputGroup","NameForm","args","handleInput","event","setState","target","type","value","handleSubmit","form","currentTarget","checkValidity","preventDefault","stopPropagation","validated","console","log","state","name","email","username","password","confirmPassword","e","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nexport default class NameForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { \n        validated: false,\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        confirmPassword: ''\n     };\n  }\n\n  handleInput = (event) => {\n    this.setState({\n      [event.target.type]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.setState({ validated: true });\n    console.log();\n  }\n\n  render() {\n    const { validated } = this.state;\n    return (\n        <Container className=\"mt-5 pt-5\">\n      <Form\n        noValidate\n        validated={validated}\n        onSubmit={e => this.handleSubmit(e)}\n      >\n        <Form.Row>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n            <Form.Label>Username</Form.Label>\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                id=\"username\"\n                placeholder=\"Username\"\n                aria-describedby=\"inputGroupPrepend\"\n                value={this.state.username} onChange={this.handleInput}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please choose a username.\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control id=\"email\" type=\"email\" placeholder=\"Email Address\" value={this.state.email} onChange={this.handleInput} required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid email address.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control id=\"password\" type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleInput} required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid password.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n            <Form.Label>Re-enter Password to Confirm</Form.Label>\n            <Form.Control id=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\" value={this.state.confirmPassword} onChange={this.handleInput} required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please make sure your password matches.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n        <Form.Group>\n          <Form.Check\n            required\n            label=\"Agree to terms and conditions\"\n            feedback=\"You must agree before submitting.\"\n          />\n        </Form.Group>\n        <Button type=\"submit\">Register</Button>\n      </Form>\n      </Container>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}