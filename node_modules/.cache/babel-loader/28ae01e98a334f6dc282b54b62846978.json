{"ast":null,"code":"import _defineProperty from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/src/components/NameForm.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nvar NameForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NameForm, _React$Component);\n\n  function NameForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NameForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NameForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleInput = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var form = event.currentTarget;\n      console.log(form.checkValidity());\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n      }\n\n      _this.setState({\n        validated: true\n      });\n\n      console.log(\"Registration received from \".concat(_this.state.email, \" under username @\").concat(_this.state.username, \". The password is \").concat(_this.state.password, \".\"));\n    };\n\n    _this.state = {\n      validated: false,\n      name: '',\n      email: '',\n      username: '',\n      password: '',\n      confirmPassword: ''\n    };\n    return _this;\n  }\n\n  _createClass(NameForm, [{\n    key: \"render\",\n    value: function render() {\n      var validated = this.state.validated;\n      return React.createElement(Container, {\n        className: \"mt-5 pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Username\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(InputGroup.Prepend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"@\")), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Username\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        value: this.state.username,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Please choose a username.\"))), React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Email Address\",\n        value: this.state.email,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Please provide a valid email address.\"))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Please provide a valid password.\")), React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"confirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Re-enter Password to Confirm\"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: this.state.confirmPassword,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Please make sure your password matches.\"))), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Check, {\n        required: true,\n        label: \"Agree to terms and conditions\",\n        feedback: \"You must agree before submitting.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return NameForm;\n}(React.Component);\n\nexport { NameForm as default };","map":{"version":3,"sources":["/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/src/components/NameForm.js"],"names":["React","Container","Form","Button","Col","InputGroup","NameForm","args","handleInput","event","setState","target","id","value","handleSubmit","preventDefault","form","currentTarget","console","log","checkValidity","stopPropagation","validated","state","email","username","password","name","confirmPassword","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nexport default class NameForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { \n        validated: false,\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        confirmPassword: ''\n     };\n  }\n\n  handleInput = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n      event.preventDefault();\n    const form = event.currentTarget;\n    console.log(form.checkValidity());\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    this.setState({ validated: true });\n    console.log(`Registration received from ${this.state.email} under username @${this.state.username}. The password is ${this.state.password}.`);\n    \n  }\n\n  render() {\n    const { validated } = this.state;\n    return (\n        <Container className=\"mt-5 pt-5\">\n            <Form\n                noValidate\n                validated={validated}\n                onSubmit={this.handleSubmit}\n            >\n                <Form.Row>\n                    <Form.Group as={Col} md=\"6\" controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <InputGroup>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            aria-describedby=\"inputGroupPrepend\"\n                            value={this.state.username} onChange={this.handleInput}\n                            required\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please choose a username.\n                        </Form.Control.Feedback>\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group as={Col} md=\"6\" controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Email Address\" value={this.state.email} onChange={this.handleInput} required />\n                        <Form.Control.Feedback type=\"invalid\">\n                        Please provide a valid email address.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                <Form.Group as={Col} md=\"6\" controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleInput} required />\n                    <Form.Control.Feedback type=\"invalid\">\n                    Please provide a valid password.\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} md=\"6\" controlId=\"confirmPassword\">\n                    <Form.Label>Re-enter Password to Confirm</Form.Label>\n                    <Form.Control  type=\"password\" placeholder=\"Confirm Password\" value={this.state.confirmPassword} onChange={this.handleInput} required />\n                    <Form.Control.Feedback type=\"invalid\">\n                    Please make sure your password matches.\n                    </Form.Control.Feedback>\n                </Form.Group>\n                </Form.Row>\n                <Form.Group>\n                <Form.Check\n                    required\n                    label=\"Agree to terms and conditions\"\n                    feedback=\"You must agree before submitting.\"\n                />\n                </Form.Group>\n                <Button type=\"submit\" onClick={this.handleSubmit}>Register</Button>\n            </Form>\n      </Container>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}