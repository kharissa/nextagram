{"ast":null,"code":"import _classCallCheck from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/src/components/NameForm.js\";\nimport React from 'react';\nimport FlexibleButton from 'FlexibleButton'; // A normal react component, render() gets triggered every 1 s even thought this.props.value is always \"fixed value\"\n\nvar ImpureChild =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImpureChild, _React$Component);\n\n  function ImpureChild() {\n    _classCallCheck(this, ImpureChild);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ImpureChild).apply(this, arguments));\n  }\n\n  _createClass(ImpureChild, [{\n    key: \"render\",\n    value: function render() {\n      console.log('rendering ImpureChild');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, this.props.value);\n    }\n  }]);\n\n  return ImpureChild;\n}(React.Component); // A pure component. It detects that this.props.value is still the same string: \"fixed value\", therefore doesn't re-render.\n\n\nvar PureChild =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(PureChild, _React$PureComponent);\n\n  function PureChild() {\n    _classCallCheck(this, PureChild);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PureChild).apply(this, arguments));\n  }\n\n  _createClass(PureChild, [{\n    key: \"render\",\n    value: function render() {\n      console.log('rendering PureChild');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.props.value);\n    }\n  }]);\n\n  return PureChild;\n}(React.PureComponent);\n\nvar App =\n/*#__PURE__*/\nfunction (_React$PureComponent2) {\n  _inherits(App, _React$PureComponent2);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: 0 // every 1 sec, we change value state to a random number\n      // and therefore triggering render() method\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        _this2.setState({\n          value: Math.random()\n        });\n      }, 1000);\n    } // during each state change, PureChild and ImpureChild components will re-render!\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"pt-4 mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pt-4 mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(PureChild, {\n        value: \"fixed value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(ImpureChild, {\n        value: \"fixed value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(React.PureComponent);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/src/components/NameForm.js"],"names":["React","FlexibleButton","ImpureChild","console","log","props","value","Component","PureChild","PureComponent","App","state","setInterval","setState","Math","random"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,gBAA3B,C,CAEA;;IACMC,W;;;;;;;;;;;;;6BACK;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,KAAL,CAAWC,KAAjB,CAAP;AACD;;;;EAJuBN,KAAK,CAACO,S,GAOhC;;;IACMC,S;;;;;;;;;;;;;6BACK;AACPL,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,KAAL,CAAWC,KAAjB,CAAP;AACD;;;;EAJqBN,KAAK,CAACS,a;;IAOTC,G;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AAACL,MAAAA,KAAK,EAAE,CAAR,CAER;AACA;;AAHQ,K;;;;;;wCAIY;AAAA;;AAClBM,MAAAA,WAAW,CAAC,YAAM;AAChB,QAAA,MAAI,CAACC,QAAL,CAAc;AAACP,UAAAA,KAAK,EAAEQ,IAAI,CAACC,MAAL;AAAR,SAAd;AACD,OAFU,EAER,IAFQ,CAAX;AAGD,K,CAED;;;;6BACS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF,CADF;AAQD;;;;EArB8Bf,KAAK,CAACS,a;;SAAlBC,G","sourcesContent":["import React from 'react';\nimport FlexibleButton from 'FlexibleButton'\n\n// A normal react component, render() gets triggered every 1 s even thought this.props.value is always \"fixed value\"\nclass ImpureChild extends React.Component {\n  render() {\n    console.log('rendering ImpureChild')\n    return <div>{this.props.value}</div>\n  }\n}\n\n// A pure component. It detects that this.props.value is still the same string: \"fixed value\", therefore doesn't re-render.\nclass PureChild extends React.PureComponent {\n  render() {\n    console.log('rendering PureChild')\n    return <div>{this.props.value}</div>\n  }\n}\n\nexport default class App extends React.PureComponent {\n  state = {value: 0}\n\n  // every 1 sec, we change value state to a random number\n  // and therefore triggering render() method\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({value: Math.random()})\n    }, 1000)\n  }\n\n  // during each state change, PureChild and ImpureChild components will re-render!\n  render() {\n    return (\n      <div className=\"pt-4 mt-4\">\n        <div className=\"pt-4 mt-4\">\n            <PureChild value=\"fixed value\"/>\n            <ImpureChild value=\"fixed value\"/>\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}