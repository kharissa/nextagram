{"ast":null,"code":"import _defineProperty from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/src/containers/Register.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport axios from 'axios';\nimport Loader from '../components/Loader';\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleClose = function () {\n      _this.props.onHide();\n    };\n\n    _this.handleFormSwitch = function () {\n      _this.props.onHide();\n\n      _this.props.isLogin();\n    };\n\n    _this.handleInput = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.handleValidation = function (event) {\n      var form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n      }\n\n      _this.setState({\n        validated: true,\n        isLoading: true\n      });\n\n      axios({\n        // POST registration information\n        method: 'POST',\n        url: 'https://insta.nextacademy.com/api/v1/users/new',\n        data: {\n          username: _this.state.username,\n          email: _this.state.email,\n          password: _this.state.password\n        }\n      }).then(function (response) {\n        // On success, display success message, close Register modal and open Login modal\n        _this.setState({\n          signUpMessage: 'You have successfully registered with us! Please proceed to login.',\n          isLoading: false\n        });\n\n        window.alert(_this.state.signUpMessage);\n\n        _this.props.onHide();\n\n        _this.props.isLogin();\n      }).catch(function (error) {\n        // On failure, display failed message and keep Register modal open\n        console.log(error);\n        var message = error.response.data.message;\n        message.join(\", \");\n\n        _this.setState({\n          isLoading: false,\n          signUpMessage: 'There was an error with your registration:\\n' + message\n        });\n\n        window.alert(_this.state.signUpMessage);\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      _this.state.password !== _this.state.confirmPassword ? window.alert(\"Passwords Don't Match\") : _this.handleValidation(event);\n    };\n\n    _this.state = {\n      show: true,\n      validated: false,\n      name: '',\n      email: '',\n      username: '',\n      password: '',\n      confirmPassword: '',\n      signUpMessage: '',\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var validated = this.state.validated;\n      return React.createElement(Modal, {\n        show: this.props.show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Register for an Account\")), this.state.isLoading ? React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        width: 150,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })) : React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Username\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(InputGroup.Prepend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"@\")), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Username\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        value: this.state.username,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Please choose a username.\"))), React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Email Address\",\n        value: this.state.email,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Please provide a valid email address.\"))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Please provide a valid password.\")), React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"confirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: this.state.confirmPassword,\n        onChange: this.handleInput,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Please make sure your password matches.\"))), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Form.Check, {\n        required: true,\n        label: \"Agree to terms and conditions\",\n        feedback: \"You must agree before submitting.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-login\",\n        onClick: this.handleFormSwitch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Button, {\n        className: \"btn-nextagram\",\n        type: \"submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport { Register as default };","map":{"version":3,"sources":["/Users/kharissafernandosmith/Projects/kharissa.github.io/react-nextagram/src/containers/Register.js"],"names":["React","Form","Button","Modal","Col","InputGroup","axios","Loader","Register","props","handleClose","onHide","handleFormSwitch","isLogin","handleInput","event","setState","target","id","value","handleValidation","form","currentTarget","checkValidity","stopPropagation","validated","isLoading","method","url","data","username","state","email","password","then","response","signUpMessage","window","alert","catch","error","console","log","message","join","handleSubmit","preventDefault","confirmPassword","show","name","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Col from 'react-bootstrap/Col'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport axios from 'axios'\nimport Loader from '../components/Loader'\n\nexport default class Register extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        show: true,\n        validated: false,\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        confirmPassword: '',\n        signUpMessage: '',\n        isLoading: false,\n    };\n  }\n\n    handleClose = () => {\n        this.props.onHide();\n    }\n\n    handleFormSwitch = () => {\n        this.props.onHide();\n        this.props.isLogin();\n    }\n\n\n    handleInput = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n\n    handleValidation = (event) => {\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n            event.stopPropagation();\n        }\n\n        this.setState({\n            validated: true,\n            isLoading: true\n        });      \n\n        axios({\n            // POST registration information\n            method: 'POST',\n            url: 'https://insta.nextacademy.com/api/v1/users/new',\n            data: {\n                username: this.state.username,\n                email: this.state.email,\n                password: this.state.password,\n            }\n        })\n        .then(response => {\n\n            // On success, display success message, close Register modal and open Login modal\n            this.setState({\n                signUpMessage: 'You have successfully registered with us! Please proceed to login.',\n                isLoading: false\n            });\n\n            window.alert(this.state.signUpMessage);\n\n            this.props.onHide();\n            this.props.isLogin();\n            \n        })\n        .catch(error => {\n\n            // On failure, display failed message and keep Register modal open\n            console.log(error);\n            const message = error.response.data.message;\n            message.join(\", \");\n            this.setState({\n                isLoading: false,\n                signUpMessage: 'There was an error with your registration:\\n' + message\n            })\n            window.alert(this.state.signUpMessage);\n        })\n        \n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        (this.state.password !== this.state.confirmPassword) ?\n        window.alert(\"Passwords Don't Match\"): this.handleValidation(event);\n    }\n\n  render() {\n      const { validated } = this.state;\n\n      return(\n      <Modal show={this.props.show} onHide={this.handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Register for an Account</Modal.Title>\n        </Modal.Header>\n        {\n            this.state.isLoading ?\n            <Container>\n                <Loader width={150}/>\n            </Container>\n            :\n            <Modal.Body>\n                <Form\n                    noValidate\n                    validated={validated}\n                    onSubmit={this.handleSubmit}\n                >\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\" controlId=\"username\">\n                            <Form.Label>Username</Form.Label>\n                            <InputGroup>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Username\"\n                                aria-describedby=\"inputGroupPrepend\"\n                                value={this.state.username} onChange={this.handleInput}\n                                required\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Please choose a username.\n                            </Form.Control.Feedback>\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Email Address\" value={this.state.email} onChange={this.handleInput} required />\n                            <Form.Control.Feedback type=\"invalid\">\n                            Please provide a valid email address.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} md=\"6\" controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleInput} required />\n                        <Form.Control.Feedback type=\"invalid\">\n                        Please provide a valid password.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md=\"6\" controlId=\"confirmPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control  type=\"password\" placeholder=\"Confirm Password\" value={this.state.confirmPassword} onChange={this.handleInput} required />\n                        <Form.Control.Feedback type=\"invalid\">\n                        Please make sure your password matches.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Group>\n                    <Form.Check\n                        required\n                        label=\"Agree to terms and conditions\"\n                        feedback=\"You must agree before submitting.\"\n                    />\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n        }\n        <Modal.Footer>\n          <Button className=\"btn-login\" onClick={this.handleFormSwitch}>\n            Login\n          </Button>\n          <Button className=\"btn-nextagram\" type=\"submit\" onClick={this.handleSubmit}>\n            Register\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}